{
  "abstract" : [
    {
      "text" : "Parses an instance of this type, or one of its subcommands, from",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "command-line arguments and calls its ",
      "type" : "text"
    },
    {
      "code" : "run()",
      "type" : "codeVoice"
    },
    {
      "text" : " method, exiting with a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "relevant error message if necessary.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser",
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand\/main()"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "ArgumentParser",
    "externalID" : "s:14ArgumentParser15ParsableCommandPAAE4mainyyFZ",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "static"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "main"
      },
      {
        "kind" : "text",
        "text" : "()"
      }
    ],
    "modules" : [
      {
        "name" : "ArgumentParser"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Type Method",
    "symbolKind" : "method",
    "title" : "main()"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "static"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "main"
            },
            {
              "kind" : "text",
              "text" : "()"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand\/main(_:)"
      ],
      "title" : "Starting the Program"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/argumentparser\/parsablecommand\/main()"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ArgumentParser/documentation/ArgumentParser": {
  "abstract" : [
    {
      "text" : "Straightforward, type-safe argument parsing for Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ArgumentParser",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser"
},
"doc://ArgumentParser/documentation/ArgumentParser/ParsableCommand": {
  "abstract" : [
    {
      "text" : "A type that can be executed as part of a nested tree of commands.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParsableCommand"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParsableCommand"
    }
  ],
  "role" : "symbol",
  "title" : "ParsableCommand",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/parsablecommand"
},
"doc://ArgumentParser/documentation/ArgumentParser/ParsableCommand/main()": {
  "abstract" : [
    {
      "text" : "Parses an instance of this type, or one of its subcommands, from",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "command-line arguments and calls its ",
      "type" : "text"
    },
    {
      "code" : "run()",
      "type" : "codeVoice"
    },
    {
      "text" : " method, exiting with a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "relevant error message if necessary.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "main"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand\/main()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "main()",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/parsablecommand\/main()"
},
"doc://ArgumentParser/documentation/ArgumentParser/ParsableCommand/main(_:)": {
  "abstract" : [
    {
      "text" : "Parses an instance of this type, or one of its subcommands, from",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the given arguments and calls its ",
      "type" : "text"
    },
    {
      "code" : "run()",
      "type" : "codeVoice"
    },
    {
      "text" : " method, exiting with a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "relevant error message if necessary.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "main"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "]?)"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableCommand\/main(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "main(_:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/parsablecommand\/main(_:)"
}
}
}