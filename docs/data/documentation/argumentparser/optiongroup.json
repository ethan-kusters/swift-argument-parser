{
  "abstract" : [
    {
      "text" : "A wrapper that transparently includes a parsable type.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:14ArgumentParser11OptionGroupV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "OptionGroup"
      }
    ],
    "modules" : [
      {
        "name" : "ArgumentParser"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "OptionGroup"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "OptionGroup"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@propertyWrapper"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "OptionGroup"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Value"
            },
            {
              "kind" : "text",
              "text" : "> "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Value"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:14ArgumentParser17ParsableArgumentsP",
              "text" : "ParsableArguments"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use an option group to include a group of options, flags, or arguments",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "declared in a parsable type.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "struct GlobalOptions: ParsableArguments {",
            "    @Flag(name: .shortAndLong)",
            "    var verbose: Bool",
            "",
            "    @Argument var values: [Int]",
            "}",
            "",
            "struct Options: ParsableArguments {",
            "    @Option var name: String",
            "    @OptionGroup var globals: GlobalOptions",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The flag and positional arguments declared as part of ",
              "type" : "text"
            },
            {
              "code" : "GlobalOptions",
              "type" : "codeVoice"
            },
            {
              "text" : " are",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "included when parsing ",
              "type" : "text"
            },
            {
              "code" : "Options",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/ArgumentParser\/s23CustomStringConvertibleP",
        "doc:\/\/ArgumentParser\/Se"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/DeclaringArguments",
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Argument",
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option",
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag",
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments"
      ],
      "title" : "Arguments, Options, and Flags"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup\/init()",
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup\/init(from:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup\/wrappedValue"
      ],
      "title" : "Instance Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup\/CustomStringConvertible-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/argumentparser\/optiongroup"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://ArgumentParser/Se": {
  "identifier" : "doc:\/\/ArgumentParser\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://ArgumentParser/documentation/ArgumentParser": {
  "abstract" : [
    {
      "text" : "Straightforward, type-safe argument parsing for Swift.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "ArgumentParser",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser"
},
"doc://ArgumentParser/documentation/ArgumentParser/Argument": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a positional command-line argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Argument"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Argument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Argument"
    }
  ],
  "role" : "symbol",
  "title" : "Argument",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/argument"
},
"doc://ArgumentParser/documentation/ArgumentParser/DeclaringArguments": {
  "abstract" : [
    {
      "text" : "Use the ",
      "type" : "text"
    },
    {
      "code" : "@Argument",
      "type" : "codeVoice"
    },
    {
      "text" : ", ",
      "type" : "text"
    },
    {
      "code" : "@Option",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "@Flag",
      "type" : "codeVoice"
    },
    {
      "text" : " property wrappers to declare the command-line interface for your command.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/DeclaringArguments",
  "kind" : "article",
  "role" : "article",
  "title" : "Declaring Arguments, Options, and Flags",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/declaringarguments"
},
"doc://ArgumentParser/documentation/ArgumentParser/Flag": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line flag.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Flag"
    }
  ],
  "role" : "symbol",
  "title" : "Flag",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/flag"
},
"doc://ArgumentParser/documentation/ArgumentParser/Option": {
  "abstract" : [
    {
      "text" : "A property wrapper that represents a command-line option.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Option"
    }
  ],
  "role" : "symbol",
  "title" : "Option",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/option"
},
"doc://ArgumentParser/documentation/ArgumentParser/OptionGroup": {
  "abstract" : [
    {
      "text" : "A wrapper that transparently includes a parsable type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptionGroup"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptionGroup"
    }
  ],
  "role" : "symbol",
  "title" : "OptionGroup",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/optiongroup"
},
"doc://ArgumentParser/documentation/ArgumentParser/OptionGroup/CustomStringConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup\/CustomStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/optiongroup\/customstringconvertible-implementations"
},
"doc://ArgumentParser/documentation/ArgumentParser/OptionGroup/init()": {
  "abstract" : [
    {
      "text" : "Creates a property that represents another parsable type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/optiongroup\/init()"
},
"doc://ArgumentParser/documentation/ArgumentParser/OptionGroup/init(from:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7DecoderP",
      "text" : "Decoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup\/init(from:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(from:)",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/optiongroup\/init(from:)"
},
"doc://ArgumentParser/documentation/ArgumentParser/OptionGroup/wrappedValue": {
  "abstract" : [
    {
      "text" : "The value presented by this property wrapper.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "wrappedValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Value"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/OptionGroup\/wrappedValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "wrappedValue",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/optiongroup\/wrappedvalue"
},
"doc://ArgumentParser/documentation/ArgumentParser/ParsableArguments": {
  "abstract" : [
    {
      "text" : "A type that can be parsed from a program’s command-line arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ParsableArguments"
    }
  ],
  "identifier" : "doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ParsableArguments",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ParsableArguments"
    }
  ],
  "role" : "symbol",
  "title" : "ParsableArguments",
  "type" : "topic",
  "url" : "\/documentation\/argumentparser\/parsablearguments"
},
"doc://ArgumentParser/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/ArgumentParser\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
}
}
}